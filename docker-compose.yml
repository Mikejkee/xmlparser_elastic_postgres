services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - discovery.type=single-node
      - node.name=es01
#      - cluster.name=${CLUSTER_NAME}
#      - cluster.initial_master_nodes=es01,es02
#      - discovery.seed_hosts=es02
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=${LICENSE}
    networks:
      - offer_parser_network

#  es02:
#    depends_on:
#      - es01
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    volumes:
#      - esdata02:/usr/share/elasticsearch/data
#    environment:
#      - node.name=es02
#      - cluster.name=${CLUSTER_NAME}
#      - cluster.initial_master_nodes=es01,es02
#      - discovery.seed_hosts=es01
#      - bootstrap.memory_lock=true
#      - xpack.security.enabled=false
#      - xpack.license.self_generated.type=${LICENSE}
#    networks:
#      - offer_parser_network

  kibana:
    depends_on:
      - es01
#      - es02
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    networks:
      - offer_parser_network

  db:
    image: postgres:16-alpine
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5434:5432
    networks:
      - offer_parser_network

  app:
    build: .
    env_file: .env
    volumes:
      - .:/xmlparser_elastic_postgres
    depends_on:
      - db
      - es01
#      - es02
      - kibana
    networks:
      - offer_parser_network

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  kibanadata:
    driver: local

networks:
  offer_parser_network:
    driver: bridge